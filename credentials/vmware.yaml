# VMware vSphere Credentials for yamlforge
# Environment variable configuration - no Kubernetes secrets required

# =============================================================================
# REQUIRED ENVIRONMENT VARIABLES
# =============================================================================
# Set these environment variables before running yamlforge:

# vSphere Connection Details
VSPHERE_SERVER: "vcenter.example.com"
VSPHERE_USER: "administrator@vsphere.local"
VSPHERE_PASSWORD: "your_vcenter_password"
VSPHERE_DATACENTER: "datacenter1"
VSPHERE_CLUSTER: "cluster1"           # Optional
VSPHERE_DATASTORE: "datastore1"       # Optional
VSPHERE_NETWORK: "VM Network"         # Optional
VSPHERE_ALLOW_UNVERIFIED_SSL: "true"  # Optional, defaults to false

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# Step 1: Create vSphere Service Account (Recommended)
# 1. Log into vCenter Server
# 2. Go to Administration → Single Sign On → Users and Groups
# 3. Create new user: yamlforge-service-account
# 4. Set a strong password
#
# Step 2: Grant Required Permissions
# 1. Go to Administration → Access Control → Roles
# 2. Create new role: "yamlforge-role" with permissions:
#    - Datastore: Allocate space, Browse datastore, Low level file operations
#    - Folder: Create folder, Delete folder
#    - Global: Cancel task, Log event
#    - Network: Assign network
#    - Resource: Assign virtual machine to resource pool
#    - Virtual Machine: All virtual machine privileges
#    - vSphere Tagging: All tagging privileges
#
# Step 3: Assign Role to Service Account
# 1. Go to Hosts and Clusters
# 2. Right-click datacenter → Add Permission
# 3. Add yamlforge-service-account with yamlforge-role
# 4. Check "Propagate to children"
#
# Step 4: Set Environment Variables
# export VSPHERE_SERVER="vcenter.example.com"
# export VSPHERE_USER="yamlforge-service-account@vsphere.local"
# export VSPHERE_PASSWORD="your_service_account_password"
# export VSPHERE_DATACENTER="datacenter1"
# export VSPHERE_CLUSTER="cluster1"
# export VSPHERE_DATASTORE="datastore1"
# export VSPHERE_NETWORK="VM Network"
#
# Step 5: Run yamlforge (automatically uses environment variables)
# yamlforge convert my-infrastructure.yaml

# =============================================================================
# REQUIRED PERMISSIONS
# =============================================================================
# The vSphere user should have the following permissions:
#
# Datacenter level:
# - Datastore.AllocateSpace
# - Datastore.Browse
# - Datastore.FileManagement
# - Network.Assign
# - Resource.AssignVMToPool
# - VirtualMachine.*
# - Folder.Create
# - Folder.Delete
#
# Global level:
# - Global.CancelTask
# - Global.LogEvent
# - System.Anonymous
# - System.Read
# - System.View

# =============================================================================
# SSL CERTIFICATE HANDLING
# =============================================================================
# For production environments, use trusted SSL certificates.
# For lab/development environments, you can allow unverified SSL:
# export VSPHERE_ALLOW_UNVERIFIED_SSL="true"
#
# To use custom CA certificates, add them to the container:
# kubectl create configmap vsphere-ca-certs \
#   --from-file=ca-certificates.crt=/path/to/your/ca.crt \
#   -n yamlforge-system

# =============================================================================
# COMMON VSPHERE CONFIGURATIONS
# =============================================================================
# 
# Small Lab Environment:
# export VSPHERE_SERVER="vcenter.lab.local"
# export VSPHERE_DATACENTER="Lab-DC"
# export VSPHERE_CLUSTER="Lab-Cluster"
# export VSPHERE_DATASTORE="Lab-Datastore"
# export VSPHERE_NETWORK="VM Network"
# export VSPHERE_ALLOW_UNVERIFIED_SSL="true"
#
# Production Environment:
# export VSPHERE_SERVER="vcenter.company.com"
# export VSPHERE_DATACENTER="Production-DC"
# export VSPHERE_CLUSTER="Production-Cluster"
# export VSPHERE_DATASTORE="Production-SAN"
# export VSPHERE_NETWORK="Production-Network"
# export VSPHERE_ALLOW_UNVERIFIED_SSL="false"

# =============================================================================
# VALIDATION
# =============================================================================
# Verify your environment variables are set:
# echo "vSphere Server: $VSPHERE_SERVER"
# echo "vSphere User: $VSPHERE_USER"
# echo "vSphere Datacenter: $VSPHERE_DATACENTER"
# echo "vSphere Cluster: $VSPHERE_CLUSTER"
# echo "Password Set: $(if [ -n "$VSPHERE_PASSWORD" ]; then echo "Yes"; else echo "No"; fi)"
#
# Test connectivity:
# govc about -u "$VSPHERE_USER:$VSPHERE_PASSWORD@$VSPHERE_SERVER" -k=$VSPHERE_ALLOW_UNVERIFIED_SSL 