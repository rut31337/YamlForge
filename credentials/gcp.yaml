# Google Cloud Platform Credentials for yamlforge
# Environment variable configuration - no Kubernetes secrets required

# =============================================================================
# REQUIRED ENVIRONMENT VARIABLES
# =============================================================================
# Set these environment variables before running yamlforge:

# Option A: Service Account Key (JSON) - Recommended
GCP_SERVICE_ACCOUNT_KEY: "$(cat path/to/service-account.json)"
GCP_PROJECT_ID: "your-gcp-project-id"

# Parent Resource Configuration (choose one)
# GCP_ORGANIZATION_ID: "123456789012"           # For organization-level projects
# GCP_FOLDER_ID: "folders/123456789012"         # For folder-level projects (takes priority)

# Project Management Configuration
# GCP_PROJECT_OWNER_EMAIL: "admin@yourdomain.com"     # Project owner email
# GCP_COMPANY_DOMAIN: "yourdomain.com"                # Company domain for auto-ownership
# GCP_ROOT_ZONE_DOMAIN: "yourdomain.com"              # Root DNS zone domain

# Option B: Individual fields (alternative)
# GCP_PROJECT_ID: "your-gcp-project-id"
# GCP_CLIENT_EMAIL: "service-account@project.iam.gserviceaccount.com"
# GCP_PRIVATE_KEY_ID: "key-id"
# GCP_PRIVATE_KEY: "-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n"

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# Step 1: Create GCP Service Account
# gcloud iam service-accounts create yamlforge-service-account \
#   --display-name="yamlforge Service Account" \
#   --description="Service account for yamlforge multi-cloud operations"
#
# Step 2: Grant Required Permissions
# export PROJECT_ID="your-project-id"
# export SA_EMAIL="yamlforge-service-account@$PROJECT_ID.iam.gserviceaccount.com"
# 
# gcloud projects add-iam-policy-binding $PROJECT_ID \
#   --member="serviceAccount:$SA_EMAIL" \
#   --role="roles/compute.imageUser"
#
# gcloud projects add-iam-policy-binding $PROJECT_ID \
#   --member="serviceAccount:$SA_EMAIL" \
#   --role="roles/dns.admin"
#
# Step 3: Create and Download Service Account Key
# gcloud iam service-accounts keys create ~/yamlforge-sa-key.json \
#   --iam-account=$SA_EMAIL
#
# Step 4: Set Environment Variables
# export GCP_PROJECT_ID="your-project-id"
# export GCP_SERVICE_ACCOUNT_KEY="$(cat ~/yamlforge-sa-key.json)"
#
# Step 5: Run yamlforge (automatically uses environment variables)
# yamlforge convert my-infrastructure.yaml

# =============================================================================
# REQUIRED PERMISSIONS
# =============================================================================
# The GCP Service Account should have the following roles:
# - Compute Image User (for image discovery)
# - DNS Administrator (for DNS-01 challenges)
# - Service Account User (for Compute Engine operations)
#
# Minimal permissions for DNS-01 challenges only:
# - DNS Administrator on specific DNS zones
#
# Commands to grant permissions:
# gcloud projects add-iam-policy-binding $PROJECT_ID \
#   --member="serviceAccount:$SA_EMAIL" \
#   --role="roles/compute.imageUser"
#
# gcloud projects add-iam-policy-binding $PROJECT_ID \
#   --member="serviceAccount:$SA_EMAIL" \
#   --role="roles/dns.admin"

# =============================================================================
# DNS-01 CHALLENGE SPECIFIC SETUP
# =============================================================================
# For cert-manager DNS-01 challenges, you may want a more restricted service account:
#
# gcloud iam service-accounts create cert-manager-dns \
#   --display-name="cert-manager DNS Service Account"
#
# gcloud projects add-iam-policy-binding $PROJECT_ID \
#   --member="serviceAccount:cert-manager-dns@$PROJECT_ID.iam.gserviceaccount.com" \
#   --role="roles/dns.admin"

# =============================================================================
# VALIDATION
# =============================================================================
# Verify your environment variables are set:
# echo "GCP Project ID: $GCP_PROJECT_ID"
# echo "Service Account Key Set: $(if [ -n "$GCP_SERVICE_ACCOUNT_KEY" ]; then echo "Yes"; else echo "No"; fi)"
#
# Test authentication:
# echo "$GCP_SERVICE_ACCOUNT_KEY" > /tmp/gcp-key.json
# gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
# gcloud compute images list --limit=5
# rm /tmp/gcp-key.json 