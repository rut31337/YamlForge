# cert-manager EAB Credentials Configuration
# Single source of truth for EAB configuration - automatically read by yamlforge

# =============================================================================
# IMPORTANT: This file is automatically read by yamlforge
# =============================================================================
# You do NOT need to apply this file manually or copy any configuration
# Just set environment variables and enable providers in defaults

# =============================================================================
# REQUIRED ENVIRONMENT VARIABLES
# =============================================================================
# Set these environment variables before running yamlforge:

# ZeroSSL EAB Credentials (Optional - only if using ZeroSSL)
# export ZEROSSL_EAB_KID="your_zerossl_eab_kid"
# export ZEROSSL_EAB_HMAC="your_zerossl_eab_hmac"

# SSL.com EAB Credentials (Optional - only if using SSL.com)  
# export SSLCOM_EAB_KID="your_sslcom_eab_kid"
# export SSLCOM_EAB_HMAC="your_sslcom_eab_hmac"

# =============================================================================
# EAB AUTOMATION CONFIGURATION (SINGLE SOURCE OF TRUTH)
# =============================================================================
# This configuration is automatically read by yamlforge
# DO NOT copy this to your deployment YAML - it's read from here
#
# IMPORTANT: The section below specifies which environment variables to use.
# It does NOT contain actual credential values - those come from environment variables.
# This is pure configuration metadata that tells yamlforge what env vars to look for.

eab_automation:
  # Automatically generate secrets from environment variables
  auto_generate_secrets: true
  
  # Environment variable mappings for EAB credentials
  # NOTE: These are environment variable NAMES, not actual credential values
  # The actual credential values are read from the environment variables you set above
  environment_variables:
    zerossl:
      eab_kid_env: "ZEROSSL_EAB_KID"      # Environment variable name to read KID from
      eab_hmac_env: "ZEROSSL_EAB_HMAC"    # Environment variable name to read HMAC from
      fallback_kid: "demo-kid-zerossl"              # Fallback value if env var not set
      fallback_hmac: "demo-hmac-key-zerossl"        # Fallback value if env var not set
      
    sslcom:
      eab_kid_env: "SSLCOM_EAB_KID"       # Environment variable name to read KID from
      eab_hmac_env: "SSLCOM_EAB_HMAC"     # Environment variable name to read HMAC from
      fallback_kid: "demo-kid-sslcom"               # Fallback value if env var not set
      fallback_hmac: "demo-hmac-key-sslcom"         # Fallback value if env var not set

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# Step 1: Get EAB Credentials from Providers
# 
# For ZeroSSL:
# 1. Register at https://app.zerossl.com/
# 2. Navigate to API Access → ACME
# 3. Click "Generate" to create EAB credentials
# 4. Copy the EAB Kid and EAB HMAC Key values
#
# For SSL.com:
# 1. Register at https://ssl.com/
# 2. Contact SSL.com support for ACME v2 access
# 3. Request EAB credentials for ACME v2
# 4. Copy the provided EAB Kid and HMAC Key values

# Step 2: Set Environment Variables
# 
# Option A: Direct export (for local development)
# export ZEROSSL_EAB_KID="1234567890abcdef1234567890abcdef"
# export ZEROSSL_EAB_HMAC="dGhpc19pc19hX2Jhc2U2NF9lbmNvZGVkX2V4YW1wbGU="
#
# Option B: .env file (don't commit to Git!)
# echo 'export ZEROSSL_EAB_KID="your_kid"' >> .env
# echo 'export ZEROSSL_EAB_HMAC="your_hmac"' >> .env
# source .env
#
# Option C: CI/CD secrets
# Set secrets in your CI/CD system and reference them in environment

# Step 3: Enable ACME Providers
#
# In defaults/openshift_operators/security/cert_manager.yaml:
# acme_providers:
#   zerossl:
#     enabled: true
#   sslcom:
#     enabled: true

# Step 4: Deploy cert-manager (NO MANUAL SECRET CREATION REQUIRED)
#
# openshift_operators:
#   - type: cert-manager
#     name: automated-certificates
#     default_issuer_email: "admin@mycompany.com"
#     enabled_acme_providers:
#       - "letsencrypt-prod"
#       - "zerossl"
#       - "sslcom"
#
# That's it! yamlforge automatically reads this file for EAB configuration

# Step 5: Run yamlforge
#
# yamlforge convert my-openshift-config.yaml
# 
# yamlforge will automatically:
# ✅ Read EAB configuration from this file
# ✅ Source credentials from environment variables
# ✅ Generate Kubernetes secrets automatically
# ✅ Create ClusterIssuers with EAB configuration
# ✅ Set up automatic fallback between providers

# =============================================================================
# DNS-01 SOLVER CREDENTIALS (Optional for wildcard certificates)
# =============================================================================

# AWS Route53 Credentials
# export AWS_ACCESS_KEY_ID="your_aws_access_key"
# export AWS_SECRET_ACCESS_KEY="your_aws_secret_key"

# CloudFlare Credentials  
# export CLOUDFLARE_API_TOKEN="your_cloudflare_api_token"

# Google Cloud DNS Credentials
# export GOOGLE_APPLICATION_CREDENTIALS="/path/to/service-account.json"

# =============================================================================
# VALIDATION
# =============================================================================
# Verify your environment variables are set:
#
# echo "ZeroSSL Kid: $ZEROSSL_EAB_KID"
# echo "ZeroSSL HMAC: $ZEROSSL_EAB_HMAC" 
# echo "SSL.com Kid: $SSLCOM_EAB_KID"
# echo "SSL.com HMAC: $SSLCOM_EAB_HMAC"

# =============================================================================
# SECURITY NOTES
# =============================================================================
# ✅ Environment variables are secure and don't persist in files
# ✅ Fallback values allow testing without real credentials
# ✅ No secrets committed to version control
# ✅ Compatible with CI/CD secret management
# ✅ Works with External Secrets Operator
# ✅ Supports sealed secrets and GitOps workflows
# ✅ Single source of truth - no configuration duplication

# =============================================================================
# TROUBLESHOOTING
# =============================================================================
# 
# Issue: EAB authentication failed
# Solution: Verify environment variables are set correctly
#
# Issue: Provider not generating certificates  
# Solution: Check provider is enabled in defaults/openshift_operators/security/cert_manager.yaml
#
# Issue: Fallback not working
# Solution: Verify fallback configuration and multiple providers enabled
#
# Issue: Environment variables not found
# Solution: Ensure variables are exported in current shell session
#
# Issue: yamlforge not finding EAB configuration
# Solution: Ensure this file exists at credentials/cert-manager.yaml 