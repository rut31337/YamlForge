# OpenShift Cluster Credentials for yamlforge
# Environment variable configuration - no Kubernetes secrets required

# =============================================================================
# REQUIRED ENVIRONMENT VARIABLES
# =============================================================================
# Set these environment variables before running yamlforge:

# OpenShift Cluster Connection
OPENSHIFT_CLUSTER_URL: "https://api.cluster.example.com:6443"
OPENSHIFT_TOKEN: "your_openshift_token"
OPENSHIFT_USERNAME: "your_username"          # Optional, if using username/password
OPENSHIFT_PASSWORD: "your_password"          # Optional, if using username/password
OPENSHIFT_NAMESPACE: "default"               # Optional, defaults to default

# Alternative: Kubeconfig (uncomment if preferred)
# OPENSHIFT_KUBECONFIG: "$(cat ~/.kube/config)"

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# Step 1: Get OpenShift Cluster Information
# 1. Log into OpenShift Web Console
# 2. Click on your username (top right) → Copy login command
# 3. Click "Display Token" 
# 4. Copy the API token and server URL
#
# Step 2: Alternative - Extract from oc login
# oc login https://api.cluster.example.com:6443
# oc whoami --show-server  # Get cluster URL
# oc whoami --show-token   # Get authentication token
#
# Step 3: Set Environment Variables
# export OPENSHIFT_CLUSTER_URL="https://api.cluster.example.com:6443"
# export OPENSHIFT_TOKEN="sha256~your-token-here"
# export OPENSHIFT_NAMESPACE="default"
#
# Step 4: Run yamlforge (automatically uses environment variables)
# yamlforge convert my-openshift-config.yaml

# =============================================================================
# AUTHENTICATION METHODS
# =============================================================================
# 
# Method 1: Service Account Token (Recommended for automation)
# 1. Create service account: oc create sa yamlforge-sa
# 2. Grant permissions: oc adm policy add-cluster-role-to-user cluster-admin -z yamlforge-sa
# 3. Get token: oc sa get-token yamlforge-sa
#
# Method 2: Personal Access Token
# 1. Log into OpenShift Web Console
# 2. User menu → Copy login command → Display Token
# 3. Copy the token value
#
# Method 3: Username/Password (Not recommended for automation)
# 1. Use your OpenShift username and password
# 2. Only works with certain identity providers
#
# Method 4: Kubeconfig File
# 1. Use existing kubeconfig from oc login
# 2. Export: export OPENSHIFT_KUBECONFIG="$(cat ~/.kube/config)"

# =============================================================================
# REQUIRED PERMISSIONS
# =============================================================================
# The OpenShift user/service account should have permissions for:
# - Creating and managing OpenShift operators
# - Managing namespaces/projects
# - Creating and managing applications
# - Managing certificates and secrets
# - Managing networking resources
#
# For full yamlforge functionality, cluster-admin role is recommended:
# oc adm policy add-cluster-role-to-user cluster-admin your-username
#
# For restricted permissions, grant specific roles:
# oc adm policy add-role-to-user admin your-username -n your-namespace

# =============================================================================
# OPENSHIFT CLUSTER TYPES
# =============================================================================
# This credential configuration works with:
# - ROSA (Red Hat OpenShift Service on AWS)
# - ARO (Azure Red Hat OpenShift)
# - OpenShift Dedicated
# - Self-managed OpenShift clusters
# - OpenShift Local (formerly CodeReady Containers)
# - OpenShift on IBM Cloud
# - OpenShift on Google Cloud

# =============================================================================
# VALIDATION
# =============================================================================
# Verify your environment variables are set:
# echo "OpenShift Cluster URL: $OPENSHIFT_CLUSTER_URL"
# echo "OpenShift Namespace: $OPENSHIFT_NAMESPACE"
# echo "Token Set: $(if [ -n "$OPENSHIFT_TOKEN" ]; then echo "Yes"; else echo "No"; fi)"
#
# Test connectivity:
# oc login --token=$OPENSHIFT_TOKEN --server=$OPENSHIFT_CLUSTER_URL
# oc cluster-info
# oc get nodes 