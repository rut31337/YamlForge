---
guid: day2o

yamlforge:
  cloud_workspace:
    name: day2-operations-workspace
    description: OpenShift Day-2 Operations Example

  openshift_clusters:
    - name: rosa-production
      type: rosa-classic
      region: us-east-1
      version: "4.14.15"
      worker_count: 6
      worker_machine_type: m5.xlarge
      min_replicas: 3
      max_replicas: 12
      
      networking:
        machine_cidr: 10.0.0.0/16
        service_cidr: 172.30.0.0/16
        pod_cidr: 10.128.0.0/14
        host_prefix: 23
      
      auto_scaling:
        enabled: true
        min_replicas: 3
        max_replicas: 12
        
    - name: aro-secondary
      type: aro
      region: eastus
      version: "4.14.15"
      worker_count: 4
      worker_machine_type: Standard_D4s_v3
      min_replicas: 2
      max_replicas: 8
      
      networking:
        machine_cidr: 10.1.0.0/16
        service_cidr: 172.31.0.0/16
        pod_cidr: 10.129.0.0/14

  openshift_operators:
    - name: cluster-monitoring
      type: monitoring
      clusters:
        - rosa-production
        - aro-secondary
      prometheus_retention: 30d
      prometheus_storage_size: 100Gi
      alertmanager_storage_size: 10Gi
      grafana_enabled: true
      grafana_storage_size: 5Gi
      node_exporter_enabled: true
      kube_state_metrics_enabled: true
      custom_alerts_enabled: true
      
    - name: cluster-logging
      type: logging
      clusters:
        - rosa-production
        - aro-secondary
      log_retention: 7d
      elasticsearch_storage_size: 200Gi
      elasticsearch_replicas: 3
      kibana_enabled: true
      fluentd_enabled: true
      log_forwarding_enabled: true

  openshift_applications:
    - name: web-application
      type: deployment
      cluster: rosa-production
      namespace: web-apps
      image: registry.example.com/web-app:v2.1.0
      replicas: 5
      port: 8080
      env:
        NODE_ENV: production
        DATABASE_URL: postgres://db.example.com:5432/webapp
        REDIS_URL: redis://redis.example.com:6379
        LOG_LEVEL: info
      resources:
        requests:
          cpu: 200m
          memory: 256Mi
        limits:
          cpu: 1000m
          memory: 1Gi

    - name: api-gateway
      type: deployment
      cluster: rosa-production
      namespace: api-gateway
      image: registry.example.com/api-gateway:v1.5.2
      replicas: 3
      port: 8080
      env:
        ENV: production
        API_RATE_LIMIT: '1000'
      resources:
        requests:
          cpu: 300m
          memory: 512Mi
        limits:
          cpu: 1500m
          memory: 2Gi

    - name: microservices-platform
      type: argocd
      cluster: rosa-production
      git_repo: https://github.com/example/microservices-manifests
      branch: main
      path: overlays/production
      namespace: microservices
      sync_policy:
        automated:
          prune: true
          selfHeal: true