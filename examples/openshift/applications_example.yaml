---
guid: apps1

yamlforge:
  openshift_clusters:
  - name: prod-rosa
    type: rosa-classic
    region: us-east-1
    size: large
    version: "4.14.15"
  - name: dev-aro
    type: aro
    region: eastus
    size: medium
    version: "4.14.15"
  - name: test-gcp
    type: self-managed
    provider: gcp
    region: us-central1
    size: small
    version: "4.14.15"
  instances:
  - name: monitoring-server
    provider: aws
    flavor: medium
    image: RHEL9-latest
    region: us-east-1
  openshift_applications:
  - name: frontend-web
    type: deployment
    cluster: prod-rosa
    image: nginx:1.21
    replicas: 3
    port: 80
    namespace: production
    hostname: app.example.com
    environment:
      NODE_ENV: production
      API_URL: https://api.example.com
      FEATURE_FLAGS: analytics,notifications
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
    health_check_path: /health
    service_type: ClusterIP
  - name: backend-api
    type: deployment
    cluster: prod-rosa
    image: myregistry/api:v1.2.3
    replicas: 5
    port: 8080
    namespace: production
    hostname: api.example.com
    environment:
      DATABASE_URL: postgresql://db.internal:5432/app
      REDIS_URL: redis://redis.internal:6379
      JWT_SECRET: ${var.jwt_secret}
      LOG_LEVEL: info
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  - name: postgres-db
    type: helm
    cluster: prod-rosa
    chart: postgresql
    repository: https://charts.bitnami.com/bitnami
    version: 12.1.9
    namespace: databases
    values:
      auth:
        postgresPassword: ${var.postgres_password}
        database: appdb
      primary:
        resources:
          requests:
            memory: 256Mi
            cpu: 250m
          limits:
            memory: 1Gi
            cpu: 500m
        persistence:
          enabled: true
          size: 20Gi
      metrics:
        enabled: true
  - name: redis-cache
    type: helm
    cluster: prod-rosa
    chart: redis
    repository: https://charts.bitnami.com/bitnami
    version: 17.3.7
    namespace: caches
    values:
      auth:
        enabled: false
      master:
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 250m
  - name: prometheus-stack
    type: helm
    cluster: prod-rosa
    chart: kube-prometheus-stack
    repository: https://prometheus-community.github.io/helm-charts
    version: 45.7.1
    namespace: monitoring
    values:
      grafana:
        enabled: true
        adminPassword: ${var.grafana_password}
        ingress:
          enabled: true
          hosts:
          - grafana.example.com
      prometheus:
        prometheusSpec:
          retention: 30d
          storageSpec:
            volumeClaimTemplate:
              spec:
                resources:
                  requests:
                    storage: 50Gi
  - name: platform-services
    type: argocd
    cluster: prod-rosa
    git_repo: https://github.com/company/platform-services
    path: manifests/production
    branch: main
    namespace: platform
    project: platform
  - name: microservices-stack
    type: argocd
    cluster: prod-rosa
    git_repo: https://github.com/company/microservices
    path: k8s/overlays/production
    branch: release
    namespace: microservices
    project: applications
  - name: global-web-app
    type: multi-cluster
    strategy: replicated
    clusters:
    - prod-rosa
    - dev-aro
    - test-gcp
    deployment_type: deployment
    image: myregistry/webapp:v2.1.0
    replicas: 2
    port: 3000
    namespace: global-apps
    hostname: global.example.com
    environment:
      CLUSTER_REGION: ${var.cluster_region}
      ENVIRONMENT: ${var.environment}
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 200m
        memory: 256Mi
  - name: data-processor
    type: multi-cluster
    strategy: sharded
    clusters:
    - prod-rosa
    - dev-aro
    - test-gcp
    deployment_type: deployment
    image: myregistry/data-processor:v1.5.2
    replicas: 3
    port: 8080
    namespace: data-processing
    environment:
      DATABASE_POOL_SIZE: '10'
      PROCESSING_THREADS: '4'
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi
  - name: analytics-service
    type: multi-cluster
    strategy: primary-secondary
    clusters:
    - prod-rosa
    - dev-aro
    deployment_type: deployment
    image: myregistry/analytics:v3.0.1
    replicas: 2
    port: 9090
    namespace: analytics
    environment:
      BACKUP_INTERVAL: 1h
      SYNC_ENABLED: 'true'
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
      limits:
        cpu: 4000m
        memory: 8Gi
  - name: dev-api
    type: deployment
    cluster: dev-aro
    image: myregistry/api:dev-latest
    replicas: 1
    port: 8080
    namespace: development
    hostname: dev-api.example.com
    environment:
      NODE_ENV: development
      DEBUG: 'true'
      HOT_RELOAD: enabled
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
  - name: test-database
    type: helm
    cluster: test-gcp
    chart: postgresql
    repository: https://charts.bitnami.com/bitnami
    version: 12.1.9
    namespace: testing
    values:
      auth:
        postgresPassword: testpassword
        database: testdb
      primary:
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 250m
        persistence:
          enabled: false
  tags:
    Environment: multi-tier
    Project: application-platform
    Owner: platform-team
    CostCenter: engineering
    Stack: full-stack
  cloud_workspace:
    name: openshift-app-platform
    description: Complete OpenShift Application Platform - Full-stack application deployment across OpenShift clusters
