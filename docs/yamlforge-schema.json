{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "YamlForge Configuration Schema",
  "description": "Complete schema for YamlForge YAML configuration files",
  "type": "object",
  "required": [
    "yamlforge"
  ],
  "properties": {
    "guid": {
      "type": "string",
      "pattern": "^[a-z0-9]{5}$",
      "description": "Unique 5-character identifier (lowercase alphanumeric)",
      "examples": [
        "web01",
        "app42",
        "test1",
        "prod1",
        "dev99"
      ]
    },
    "yamlforge": {
      "type": "object",
      "description": "Main configuration wrapper (required)",
      "properties": {
        "cloud_workspace": {
          "$ref": "#/definitions/cloud_workspace"
        },
        "gcp": {
          "$ref": "#/definitions/gcp_config"
        },
        "azure": {
          "$ref": "#/definitions/azure_config"
        },
        "ibm_vpc": {
          "$ref": "#/definitions/ibm_vpc_config"
        },
        "ibm_classic": {
          "$ref": "#/definitions/ibm_classic_config"
        },
        "instances": {
          "$ref": "#/definitions/instances"
        },
        "openshift_clusters": {
          "$ref": "#/definitions/openshift_clusters"
        },
        "openshift_operators": {
          "$ref": "#/definitions/openshift_operators"
        },
        "openshift_applications": {
          "$ref": "#/definitions/openshift_applications"
        },
        "security_groups": {
          "$ref": "#/definitions/security_groups"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "definitions": {
    "cloud_workspace": {
      "type": "object",
      "description": "Workspace configuration for organization",
      "properties": {
        "name": {
          "type": "string",
          "description": "Workspace name for organization"
        },
        "description": {
          "type": "string",
          "description": "Description of the workspace purpose"
        },
        "tags": {
          "type": "object",
          "description": "Tags for the workspace",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "instances": {
      "type": "array",
      "description": "Array of cloud instances to deploy",
      "items": {
        "type": "object",
        "required": [
          "name",
          "provider"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for the instance"
          },
          "provider": {
            "type": "string",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "oci",
              "ibm_vpc",
              "ibm_classic",
              "vmware",
              "alibaba",
              "cheapest",
              "cheapest-gpu"
            ],
            "description": "Cloud provider, 'cheapest' for automatic cost optimization, or 'cheapest-gpu' for GPU workload optimization"
          },
          "region": {
            "type": "string",
            "description": "Cloud region (e.g., us-east-1, eastus, us-central1)"
          },
          "size": {
            "type": "string",
            "enum": [
              "nano",
              "micro",
              "small",
              "medium",
              "large",
              "xlarge",
              "2xlarge",
              "gpu_small",
              "gpu_medium",
              "gpu_large",
              "compute_large",
              "memory_large"
            ],
            "description": "Instance size category"
          },
          "flavor": {
            "type": "string",
            "description": "Cloud-specific instance type (e.g., t3.medium, Standard_D4s_v3)"
          },
          "image": {
            "type": "string",
            "description": "Operating system image (e.g., RHEL9-latest, RHEL9-GOLD-latest, Ubuntu22-latest)",
            "default": "RHEL9-latest"
          },
          "cores": {
            "type": "integer",
            "minimum": 1,
            "description": "Number of CPU cores (alternative to size)"
          },
          "memory": {
            "type": "integer",
            "minimum": 512,
            "description": "Memory in MB (alternative to size)"
          },
          "gpu_type": {
            "type": "string",
            "enum": [
              "NVIDIA T4",
              "NVIDIA V100",
              "NVIDIA A100",
              "NVIDIA L4",
              "NVIDIA L40S",
              "NVIDIA K80",
              "AMD RADEON PRO V520"
            ],
            "description": "GPU type for AI/ML workloads"
          },
          "gpu_count": {
            "type": "integer",
            "minimum": 1,
            "maximum": 8,
            "description": "Number of GPUs"
          },
          "ssh_key": {
            "type": "string",
            "description": "SSH public key for access"
          },
          "security_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Security group names"
          },
          "tags": {
            "type": "object",
            "description": "Key-value tags for resource organization",
            "additionalProperties": {
              "type": "string"
            }
          },
          "exclude_providers": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "aws",
                "azure",
                "gcp",
                "oci",
                "ibm_vpc",
                "ibm_classic",
                "vmware",
                "alibaba"
              ]
            },
            "description": "Override global provider exclusions for this specific instance (only applies to 'cheapest' and 'cheapest-gpu' providers)"
          }
        }
      }
    },
    "openshift_clusters": {
      "type": "array",
      "description": "Array of OpenShift clusters to deploy",
      "items": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique cluster name"
          },
          "type": {
            "type": "string",
            "enum": [
              "rosa-classic",
              "rosa-hcp",
              "aro",
              "openshift-dedicated",
              "self-managed",
              "hypershift-mgmt",
              "hypershift-hosted"
            ],
            "description": "OpenShift cluster type"
          },
          "region": {
            "type": "string",
            "description": "Cloud region for cluster deployment"
          },
          "version": {
            "type": "string",
            "pattern": "^(4\\.[0-9]+|latest)$",
            "description": "OpenShift version (e.g., 4.18, 4.19, latest)",
            "default": "latest"
          },
          "size": {
            "type": "string",
            "enum": [
              "micro",
              "small",
              "medium",
              "large",
              "xlarge"
            ],
            "description": "Cluster size category"
          },
          "worker_count": {
            "type": "integer",
            "minimum": 1,
            "description": "Number of worker nodes (must be multiple of 3 for ROSA HCP)"
          },
          "min_replicas": {
            "type": "integer",
            "minimum": 1,
            "description": "Minimum worker nodes for autoscaling"
          },
          "max_replicas": {
            "type": "integer",
            "minimum": 1,
            "description": "Maximum worker nodes for autoscaling"
          },
          "billing_account": {
            "type": "string",
            "description": "AWS billing account ID for ROSA HCP clusters"
          },
          "auto_scaling": {
            "type": "object",
            "description": "Autoscaling configuration",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "min_replicas": {
                "type": "integer",
                "minimum": 1
              },
              "max_replicas": {
                "type": "integer",
                "minimum": 1
              }
            }
          },
          "networking": {
            "type": "object",
            "description": "Cluster networking configuration",
            "properties": {
              "machine_cidr": {
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$",
                "description": "Machine network CIDR"
              },
              "pod_cidr": {
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$",
                "description": "Pod network CIDR"
              },
              "service_cidr": {
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$",
                "description": "Service network CIDR"
              }
            }
          }
        }
      }
    },
    "openshift_operators": {
      "type": "array",
      "description": "Array of OpenShift operators to deploy",
      "items": {
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "monitoring",
              "logging",
              "gitops",
              "pipelines",
              "serverless",
              "service-mesh",
              "cert-manager",
              "storage",
              "backup"
            ],
            "description": "Operator type"
          },
          "name": {
            "type": "string",
            "description": "Operator instance name"
          },
          "target_cluster": {
            "type": "string",
            "description": "Target cluster name (must match a cluster name)"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Whether the operator should be enabled"
          }
        }
      }
    },
    "openshift_applications": {
      "type": "array",
      "description": "Array of applications to deploy on OpenShift",
      "items": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Application name"
          },
          "target_cluster": {
            "type": "string",
            "description": "Target cluster name (must match a cluster name)"
          },
          "namespace": {
            "type": "string",
            "description": "Kubernetes namespace",
            "default": "default"
          },
          "deployment": {
            "type": "object",
            "description": "Deployment configuration",
            "properties": {
              "replicas": {
                "type": "integer",
                "minimum": 1,
                "description": "Number of replicas"
              },
              "containers": {
                "type": "array",
                "description": "Container configurations",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "ports": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "security_groups": {
      "type": "array",
      "description": "Array of security groups to create",
      "items": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "direction",
                "protocol",
                "port_range",
                "source"
              ],
              "properties": {
                "direction": {
                  "type": "string",
                  "enum": [
                    "ingress",
                    "egress"
                  ],
                  "description": "Direction of traffic flow (ingress = incoming, egress = outgoing)"
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "tcp",
                    "udp",
                    "icmp",
                    "icmpv6",
                    "all",
                    "ah",
                    "esp",
                    "gre",
                    "ipip"
                  ],
                  "description": "Network protocol. Common: tcp, udp, icmp, icmpv6, all. Advanced: ah, esp, gre, ipip"
                },
                "port_range": {
                  "type": "string",
                  "pattern": "^([0-9]+|[0-9]+-[0-9]+)$",
                  "description": "Port or port range (e.g., '22', '80-90', '443'). Single port '22' becomes range '22-22'"
                },
                "source": {
                  "type": "string",
                  "description": "Source CIDR block (e.g., '0.0.0.0/0', '10.0.0.0/8') or provider-specific reference (e.g., 'sg-12345678' for AWS, 'tags' for GCP). Not supported with 'cheapest' provider."
                },
                "destination": {
                  "type": "string",
                  "description": "Destination CIDR block or provider-specific reference. Required for egress rules, optional for ingress rules. Same format as source."
                },
                "description": {
                  "type": "string",
                  "description": "Optional description for the security group rule"
                }
              }
            }
          }
        }
      }
    },
    "gcp_config": {
      "type": "object",
      "description": "GCP-specific configuration options",
      "properties": {
        "use_existing_project": {
          "type": "boolean",
          "description": "Use an existing GCP project instead of creating a new one",
          "default": false
        },
        "existing_project_id": {
          "type": "string",
          "description": "ID of the existing GCP project to use (required if use_existing_project is true)"
        },
        "project_name": {
          "type": "string",
          "description": "Name for the new GCP project (only used when creating new project)"
        },
        "billing_account_id": {
          "type": "string",
          "description": "GCP billing account ID for new project creation"
        },
        "organization_id": {
          "type": "string",
          "description": "GCP organization ID for new project creation"
        },
        "folder_id": {
          "type": "string",
          "description": "GCP folder ID for new project creation (alternative to organization_id)"
        }
      }
    },
    "azure_config": {
      "type": "object",
      "description": "Azure-specific configuration options",
      "properties": {
        "use_existing_resource_group": {
          "type": "boolean",
          "description": "Use an existing Azure resource group instead of creating new ones",
          "default": false
        },
        "existing_resource_group_name": {
          "type": "string",
          "description": "Name of the existing Azure resource group to use (required if use_existing_resource_group is true)"
        },
        "existing_resource_group_location": {
          "type": "string",
          "description": "Location of the existing Azure resource group (e.g., eastus, westus2)"
        }
      }
    },
    "ibm_vpc_config": {
      "type": "object",
      "description": "IBM VPC-specific configuration options",
      "properties": {
        "use_existing_resource_group": {
          "type": "boolean",
          "description": "Use an existing IBM Cloud resource group instead of creating new ones",
          "default": false
        },
        "existing_resource_group_name": {
          "type": "string",
          "description": "Name of the existing IBM Cloud resource group to use (required if use_existing_resource_group is true)"
        }
      }
    },
    "ibm_classic_config": {
      "type": "object",
      "description": "IBM Classic-specific configuration options",
      "properties": {
        "default_datacenter": {
          "type": "string",
          "description": "Default datacenter for IBM Classic instances (e.g., dal10, wdc07)",
          "default": "dal10"
        },
        "default_domain": {
          "type": "string",
          "description": "Default domain for IBM Classic instances",
          "default": "example.com"
        }
      }
    }
  }
}
